name: Build and deploy Node.js app to Azure Web App - sa

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. GitHub 리포지토리 체크아웃
      - uses: actions/checkout@v4

      # 2. Node.js 버전 설정
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3. Secrets 값 확인 (디버깅용)
      - name: Verify Secrets
        run: |
          if [ -z "${{ secrets.AZUREAPPSERVICE_CLIENTID }}" ]; then
            echo "AZUREAPPSERVICE_CLIENTID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.AZUREAPPSERVICE_CLIENTSECRET }}" ]; then
            echo "AZUREAPPSERVICE_CLIENTSECRET is not set"
            exit 1
          fi
          if [ -z "${{ secrets.AZUREAPPSERVICE_TENANTID }}" ]; then
            echo "AZUREAPPSERVICE_TENANTID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}" ]; then
            echo "AZUREAPPSERVICE_SUBSCRIPTIONID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.MONGO_URI }}" ]; then
            echo "MONGO_URI is not set"
            exit 1
          fi
          if [ -z "${{ secrets.JWT_SECRET }}" ]; then
            echo "JWT_SECRET is not set"
            exit 1
          fi
          if [ -z "${{ secrets.PORT }}" ]; then
            echo "PORT is not set"
            exit 1
          fi
          echo "All Secrets are set"

      # 4. npm 설치, 빌드, 테스트
      - name: npm install, build, and test
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        run: |
          npm install
          npm run build --if-present || echo "Build script not defined, skipping."
          npm run test --if-present || echo "Test script not defined, skipping."

      # 5. 배포를 위한 파일 압축
      - name: Zip artifact for deployment
        run: zip -r release.zip ./*

      # 6. 빌드 아티팩트 업로드
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # 7. 빌드 아티팩트 다운로드
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # 8. 압축 해제
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # 9. Azure에 로그인
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
          client-secret: ${{ secrets.AZUREAPPSERVICE_CLIENTSECRET }}

      # 10. Azure Web App에 배포
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'sa' # Azure Portal에서 생성한 Web App 이름
          slot-name: ''  # 기본 슬롯 사용
          package: .
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
